[{"content":"欢迎来到豆逗子的小黑屋\n","date":"2023-05-31","permalink":"/","section":"","summary":"欢迎来到豆逗子的小黑屋","title":""},{"content":"","date":"2023-05-31","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" 布雷顿森林体系 # 背景 # 二战结束后，为了避免货币动荡导致的大萧条。体系策划者想要一个处于国际监管和指导下的固定汇率体系，同时结束对国际贸易和服务的管制。在只有一国国际收支出现“基本失衡”的例外情况下，允许汇率变化。\n为了实现这些目标，体系策划者们成立了两个拥有自己雇员的国际组织：\n国际货币基金组织 IMF 国际复兴开发银行——世界银行 其他前提：\n1946年美国和加拿大向英国提供了37.5亿美元的长期低息贷款，以补充恢复其储备，使英镑在国际上可流通 马歇尔计划：在2~3年内持续投入美国国民生产总值GNP的2%，以促进欧洲国家之间的贸易和经济合作，重建基础产业和交通设施 规则 # 布雷顿森林体系中的每个成员国，都有义务为其货币指定“平价par”，即以黄金或美元来确定本国货币的价格。\n加入该体系的国家，必须时刻准备着，在持有其货币的他国货币当局提出要求时，将其本币兑换成黄金或美元。这种兑换采用他们所公布的平价，并在不超过1%的幅度内上下浮动。\n1945年年底，在所有国家9.65亿盎司黄金的总储备中，美国拥有5.74亿盎司，美国是唯一一个能够切实做到“保持黄金的可兑换”的国家。最终由美元锚定 35美元/盎司 的价格。\n凯恩斯的理论设想\n设想在国家已有的黄金储备之外，拟制一种新的超主权的国际货币（他将其命名为“班柯”）。成立一个“国际清算联盟”的世界性中央银行来发行班柯，班柯的价值与黄金挂钩但不可兑换。所有的国际交易都要用班柯计价和清算，各国也需要通过班柯存款账户来清算相应的官方债权债务。针对长期处于吸收别国储备的顺差国家，凯恩斯给出了两个解决方案：\n扩大储备供应规模 建立某种自动机制，惩罚那些长期、大额贸易顺差积累了过多储备的国家（限制出口产品）凯恩斯的设想最终成为了IMF的 特别提款权SDR 的前身。 缺陷 # 特里芬难题\n比利时经济学家罗伯特特里芬，出版了一本名为《黄金与美元危机》的书，指出了此观点：\n伴随着贸易规模的扩大，所有的固定汇率体系都需要增加可用的货币，即增加可接受的国际货币，以满足增长的贸易和投资、融资需求。按照既定的价格水平，将来的黄金产量不足以满足这种需求，因而在布雷顿森林体系内部，满足增长需要的国际清偿手段来源只能是美元。而把美元转移到世界其他国家的唯一途径，就是美国国际收支逆差。\n对美国以外的国家来说只有两种选择：\n持有更多的美元储备 用美元储备从美国换取更多黄金（美元保持黄金可兑换是布雷顿森林体系的基础之一） 第N种货币问题\n不是每个国家都能独立地确定汇率水平，至少有一个国家得是被动的。\n假设有三个国家，A国和B国确定了本币对C国货币的汇率，这同时将确定A、B两国间的货币交叉汇率以及C国货币的汇率。如果C国不喜欢这种设计并试图改变其货币汇率，那么A、B两国就会受到干扰，并引发不稳定和不可预见的后果。\n新经济政策 和 史密森学会协定 # 尼克松新经济政策 # 1970年年底，随着美国整体赤字的上升以及更多黄金的流失，美国财政部和经济学家测算，美元将需要贬值10~15%才能恢复均衡（具体贬值幅度取决于多少国家一同贬值）。沃尔克的初步结论是，主动停止黄金销售，为重大汇率调整以及体系必要的改革做准备，同时结合国内价格冻结及配套的财政、货币政策，以抑制通货膨胀。\n1971年8月13日-15日，美国财政部与时任总统的尼克松在戴维营，确定了最终方案并发表了《新经济政策：和平的挑战》：\n暂停美元对黄金的兑付 对进口商品增收10%的进口附加税 对国内新投资进行税收抵免，并废除国内汽车生产商7%的汽车消费税 削减联邦政府开支，减少对外经济援助 冻结工资和物价以控制通货膨胀 关闭黄金窗口之后，几个主要国家仍在强烈抵制其货币对美元向上浮动，以避免汇率升值。\n尼克松新经济政策的主要目的是进行汇率调整，但汇率调整涉及到各国协商，所以这些政策主要是为了汇率调整做准备\n史密森学会协定 # 直到1971年12月底，十国集团就汇率调整等问题地界协定。主要内容如下：\n黄金价格从35美元/盎司提高到38美元/盎司，即上涨8.5% 围绕新平价（或者叫“中心汇率”）的汇率波动边界从原来的1%提高到2.25% 美国取消进口附加税 其余国家货币对美元向上浮动，部分国家维持现有黄金平价 日元从360日元/美元升值到308日元/美元，升值16.88% 德国马克对美元升值13.57% 意大利和瑞典维持本币对黄金贬值1% 最终计算美元贸易加权贬值幅度略低于8%，剔除权重很大的加拿大，测算结果是12%\n史密森学会协定是在原有基础上，想维护一个新平价来保证固定汇率体系\n1971年汇率趋势图（兑美元） # 浮动汇率 # 固定向浮动的转变 # 史密森学会协定后不久，投机力量转向英镑，外汇市场上发生了抛售英镑的风潮。1972年6月23日，迫于投机压力，英国保守党政府宣布让英镑浮动，英国的汇率浮动是史密森体系中心汇率的第一次正式突破。\n1973年年初，爆发了针对意大利不稳定政局的投机，意大利人开始抛售里拉兑换瑞士法郎，几天后，瑞士宣布汇率浮动，此举又引发了针对美元的新投机潮。\n之后，美国开始筹备汇率大幅调整的政策，最终协商的大致结果是：\n美元对黄金贬值10%，即42.22美元/盎司 欧洲国家保持汇率对黄金不动，对美元升值10% 日元对黄金升值10%，对美元升值20% 日本最终承诺，允许日元自由浮动264日元/美元水平，即升值17%；如果市场压力明显，日本允许日元上升到257即升值20%。\n但在汇率大幅调整的政策公布后，大量资金连续几天流向美元，同时金价很快开始急剧上升，达到90美元/盎司，大大超出42.22美元/盎司。一周时间里，美元又涌向欧洲各国的中央银行。\n1973年3月19日，欧共体、美国和日本在巴黎召开紧急会议。欧洲各国和美国开始尝试采取联合浮动的安排。同时，美国承诺吸收一些欧洲美元，并控制无管理的欧洲美元市场。\n1973年的诉诸浮动，主要原因在于——面对资本在全球外汇市场中的投机性流动，努力维持平价或中间汇率看上去都太过困难，各方普遍同意浮动汇率只是最后的手段。\n与此同时，欧洲国家正在发展平价，即用于它们几国之间的固定汇率体系。1991年12月，欧洲各国政府首脑会议政治决定，不仅要实现固定汇率，而且要在2000年之前，在欧共体中所有证明有能力实施某些金融稳定政策的国家内实行统一货币——欧元。\n浮动汇率体制早期，央行和财政官员以为中长期因素诸如购买力平价和国际收支调节将起到主要作用。但后来发现，短期的资本流动和利率差变得非常重要，除这些因素外，信息技术爆炸也加剧了焦点的快速转移。前一刻市场还在聚焦利率，后一刻则变成了国际收支数据，然后又转向政治动态。所以，想要确定短期行为中影响汇率浮动的决定因素是困难的。\n第一次石油危机 # 1973年10月——1974年3月，以沙特阿拉伯为首的石油输出组织OPEC宣布，对赎罪日战争期间支持以色列的国家（最初的目标国家是加拿大、日本、荷兰、美国和美国，随后禁运扩大到葡萄牙、罗德西亚和南非）实施石油禁用，史称第一次石油危机。在此期间石油价格上涨了3倍。\n石油进口国的经济内外交困：当购买力从它们这里被虹吸到石油生产国和出口国时，它们面临通货紧缩；与此同时，当暴涨的油价波及至国内经济时，它们又遭到通货膨胀的威胁。\n尽管OPEC有巨大的盈余回流，但这些顺差中积累的大部分美元存进了知名的国际大银行，特别是以短期欧洲美元的形式；而这些流动性充足的银行，又将这笔资金借给了由于油价上涨而陷入严重外部收支赤字的政府中，如拉美和日本等。这种中立性的市场操作，很快消除了石油危机造成的大部分金融恐慌。同时也让各国更加理解了市场决定的浮动汇率在协调国际失衡和巨额资本流动方面的优势。\n浮动汇率制的协调 \u0026amp;\u0026amp; 欧洲货币体系 # 1975年秋天，法国和美国两个在固定汇率和浮动汇率中论战的主要对手，商定出了一些条款，为浮动汇率提供了法律依据。在1976年1月的牙买加会议上，国际货币基金组织IMF的国际货币制度临时委员会，对协定修正案达成了一致，正式通过了协议修正案。具体内容如下:\n汇率稳定虽被真诚期望，但只能在”有序的基本经济和金融状况“下出现，而不是由任何政府的具体决策来确定一个恰当的汇率。国家应该避免”操纵“汇率，而国际货币基金组织自身则应发挥严格监督作用，这样，通过干预或者其他方式扭曲市场的企图和行为将被遏止。\n之后各国做出努力，期望找到某种管理浮动汇率的方式。新方法的整体思想不是应对危机，而是合作以避免危机并促进稳定，即协调——所有国家的行动互为配合，最终，它们在实现国内和国际目标方面都会做得更好。\n但随着火车头战略（德国日本采取扩张经济的措施，美国解除石油价格管制）、控制汇率波动的失灵，以及第二次石油危机的冲击，浇灭了世界追求协调的热情。自此世界进入一个政策非协调的时期。\n相反，欧洲共同体在1979年成立了欧洲货币体系，以保护其成员免受美元动荡之苦，由此向欧元体系迈向了决定性的一步。\n1972-1976年汇率趋势图（兑美元） # 美国通胀和里根经济学 # 1965年至1982年美国经历了“大通胀”时期，其中79-82年更是产生了滞涨，即失业和通胀同时上升甚至引发衰退。\n1980年底，里根赢得大选，并在1981年推出了里根经济学：\n削减联邦开支 削减个人所得税并伴以投资的税收优惠 放松商业活动管制，减少政府对经济的调控与控制货币供应量 反通胀的货币政策，加息等 但事后分析，有两点误判：\n削减所得税并没有增加储蓄而是增加了消费； 削减联邦开支的困难：国防支出的增加和社会福利支出（社会保障、医疗和其他由国会批准的中产阶级和老年人福利）的增加。 同时由于民主党和共和党的政治角力，更看重谁能把税减的更低，而不是伴随政府开支的削减；甚至一些顾问们认为降低政府开支的方式不是坚持依据税收量入为出，而是用赤字来威胁国会与民众，因为这涉及到政府开支和社会福利。由此引发了巨额的内部赤字（私人部门的储蓄和投资不足以维持和政府部门赤字，而导致国际收支不平衡）。同时配合货币政策，导致了更高利率、强美元和巨大的对外赤字。\n随着时间的推移，高利率吸引了越来越多的海外的资本流入，从而帮助美国缓解了赤字和投资问题，使得美国从一个在1981年拥有1410亿美元国外净资产的债权国，转变成了一个在1985年净资产负债1110亿美元的债务国。\n广场协议 # 随着1982年美国结束通胀开始复苏，到1984年到了顶点，同时强美元引发的高汇率导致进口激增，美国的贸易逆差在1984年突破了1000亿美元。伴随着欧洲和日本经济的疲软，和1978年的汇率相比，德国马克对美元贬值近50%，日元贬值1/3。\n对美国自身来说，巨额预算赤字和大幅经常项目逆差严重依赖于海外借款，即外资流入。但外资流入基于的是对美元的信心，如果由于对美国再度通胀的担心，或由变化无常的投资者偏好，导致对美元信心的丧失，这是美联储所顾虑的。\n同时英国面对英镑的贬值，也敦促美国更大力度、更大范围地干预。\n到1985年3月，欧洲财政部长进行了干预，德国联邦银行一家就卖出了48亿美元。\n所有这些力量最终汇聚于1985年9月22日的广场协议中。五国集团（美国、日本、英国、法国和德国）的财政部长和央行行长于纽约的广场饭店会晤，并发表一份非正式报告：\n美元从目前位置向下调整10~12%的幅度，在短期内是容易实现的。伴随着这个调整，参与国家的干预责任将可以从干预义务中解放出来。 避免日元/欧洲货币间出现重大扭曲是有利的 不寻求美元急剧走低 在广场协议后的前七天(9月23日到10月1日)里，五国集团集体卖出了27亿美元，其中日本是12.5亿、法国卖出了6.35亿、美国卖出4.8亿、德国2.47亿、英国1.74亿。在第一周结束时，相对美元，日元已升值了11.8%，德国马克升值7.8%，法国法郎升值7.6%，英镑2.9%。\n等到10月底时，十国集团干预共投入102亿美元，美国32亿美元，日本30亿美元，德国、法国、英国合计20亿美元，其他国家合计20亿美元。此时相对美元，日元升值了超过12%，欧洲货币升值9%。后来美元在没有更多干预的情况下继续下跌。\n强大的日元 (日元升值) 给日本经济带来的好处多于损失：损失主要是出口产业特别是中小规模企业；好处在于更低的进口价格、更多的消费者满意度、海外投资机会以及更强的商业合理化激励。\n“冲销”干预和“非冲销”干预——1983年4月《杰根森报告》(Jurgensen Report, Report of the Working Croup on Exchange Market Intervention)\n非冲销干预是指一国中央银行在买卖一种外币时，允许央行资产产生的变化去改变货币供应量和利率。例如美联储创造美元购买德国马克，同所有公开市场购买一样，那些美元增加银行准备金，最终是数倍于准备金增加额的货币流通量；在其他条件不变的情况下，利率将趋于下降。相反，如果外币的最初买入被中央银行通过卖出的其他资产所冲抵，比如国债，那样货币储备和货币政策将保持不变，这种干预就是冲销。\n但在现实中，几乎每个中央银行都有各自的货币政策目标，而不是根据外汇干预的数量来确定的。如果那种干预扩大或缩小了基本货币，那么本能的做法就是通过国内货币手段来冲抵。即在能力范围之内自动冲销干预。\n卢浮宫协议 # 1986年初，经过广场协议做出的干预，美元自一年前的峰值平均下跌了25%。但是美国贸易逆差和经常项目赤字仍在攀升；日本和德国的经济增长也持续低迷，欧洲的失业率居高不下。\n为了减少国际贸易格局和货币市场的不平衡，同时减轻美国贸易和预算的双赤字，美国代表基于“改变贸易顺差和贸易逆差国家储蓄与投资之间平衡状况的必要性“的共识，建议日本和德国政府采取更加积极的扩张措施，同时美国政府答应减少财政赤字。\n于此同时，各国对更稳定的外汇市场有着更加强烈的需求。\nJ曲线效应 和 滞后效应\nJ曲线效应是指一国的贸易收支曲线在本国货币贬值后的最初一段时间里仍是趋势向下的，状如字母J。原因是，虽然一国对外贸易价格变化了，但进口量和出口量还没来得及对新的价格体系做出反应。\n滞后效应是指产业的进出口模式转换存在滞后性，即汇率变化与产业的相应反馈之间存在长时间的时滞。\n最终在1987年2月，G7七国集团统一在巴黎卢浮宫会晤，主要的议题是：为减少国际不平衡而有可能制定的新宏观经济政策；能在多大程度上接纳美国希望将协调的政策机制正规化以及七国对汇率采取的共同立场。\n最终敲定的具体内容是：\n德国承诺加大已提出的1988年减税力度；日本银行降低贴现率，从3%降到2.5%；美国承诺减少财政赤字 同意建立起一种新的监督机制，利用经济指标来监测中长期规划的进展是否正常 承诺暂时努力将汇率维持在近期水平附近 其中第二点，利用各种既定的经济指标约束议程的总体思路是：\n主要国家与国际货币基金组织合作，制定一系列尽可能客观的绩效统计指标：实际增长、通货膨胀、经常账户、预算开支和赤字、货币供应量、汇率以及其他。其中一些指标的目的或目标，将为各个国家分别设定，之后则被评估，以确保这些目标间的一致性。这些目标的落实将一起受到监测。如果政策需要调整以确保每个国家实现目标，那就通过会议来协调。不能实现议定的增长或国际收支目标的国家，将被要求采取补救措施。\n但在会议结束后，美元依然持续下跌并冲破了目标汇率。在媒体看来，政策协调显然没有发挥效用。\n同时美国财政部一再催促德国实施宽松货币政策却遭到了拒绝；美国国会也在8月修正了《格拉姆-路德曼-霍林斯法案》，将平衡联邦预算的目标年从1991年推迟到了1993年，美国预算赤字的改善速度远低于市场预期。\n后续经过美国财政部与日本沟通，10月日本政府宣布了一个6万亿日元的一揽子财政刺激计划；与德国当局的对话也于12月重启，讨论修改和加速德国税收改革方案的可能性，从而产生一些财政刺激效果。\n七国集团试图再次挽救形势，决定在没有会议的情况下在12月23日发表”圣诞公报“，主要阐述了关注重点的转变：从广场协议上推低美元的最初目标，转变到卢浮宫会议中汇率与经济基本面相一致的声明。\n人民币汇率并轨 # 1953到1979年，在”统收统支“的计划经济体制下，外汇收支平衡由国家统一调控，且整个国际货币体系采取的是固定汇率制。因此人民币也采用单一的固定汇率制。\n1979到1985年，我国的外贸体制进行了重大改革，由国家垄断转为由外贸、工贸、大中型企业和三资企业共同经营。但由于人民币信用问题，实际外汇市场与官方报价之间出现了倒挂现象。为鼓励出口，实行了官方牌价和贸易内部结算价的双重汇率制度。到1985年，中国正式取消了贸易内部结算价，推出外汇调剂价，此时形成了官方牌价和外汇调剂价的双重汇率制度。所以从1979年到1983年这段时期，总结为人民币实行双轨制时期。\n直到1993年12月28日，中国人民银行发布了“关于进一步改革外汇管理体制的公告”，规定自1994年1月1日起，人民币官方汇率与调剂汇率并轨，实行以市场供求为基础的、单一的、有管理的浮动制。\n人民币汇率从93年12月的5.8元/美元(官方报价)，到1994年1月的8.7元/美元。\n汇改主要内容如下：\n官方汇率与外汇市场调剂汇率并轨 取消外汇留成制，实行强制结售汇制度 建立银行间外汇市场，实行会员制和公开竞价成交方式，以央行公布的基准价为参考，每日波动幅度限定在±0.3%以内 摘录 # 以下主要是对书中的部分摘抄：\n无论财政政策在经济上有什么优势，灵活使用财政政策均存在政治困难。这种困难非常明显地限制了国际经济政策合作的可能性，尽管有些情况下中央银行可以也应该发挥补充作用。\n缺乏货币政策和财政政策的紧密协调，汇率的灵活性就成了一种必然。但现实中的浮动汇率，并未产生其忠实的支持者想象的那种外汇市场的稳定和有序状态。目前还不清楚汇率的上下波动如何影响我们真正关心的事情：贸易和经济活动的增长、价格和生产率水平。但事情的逻辑启发了我，长时间之后，经济效率的成本一定是巨大的。\n毕竟，开放的经济秩序中的经济活动，更多基于“如果国际贸易和投资遵循比较优势模式，世界就会更好”的理念。比较优势是，在考虑了国家间不同的资源、劳动力供给和技术水平以及资本的可得性等因素，各国、地区应集中在其相对有效率的生产活动上。但当国家间的相对成本和价格受到20~50%甚至更大的汇率波动影响时，企业很难有效测算、确定持续的竞争优势领域。没有确定或零成本的方式可以对冲所有的不确定性，唯一确定的受益者，是那些操纵交易并发明了眼花缭乱的新工具来减少风险或便于投机的人们。\n但这些风险和成本，似乎正在促使更多发达国家经营性的产业投资转向为本地或区域性市场生产。换句话说，现实世界的决策经常是防御性的，旨在规避汇率不确定和贸易保护主义压力，而不是效益最大化。这不可避免地导致开放市场的一些重要好处被削弱，后者维系者世界主要生产者间的激烈竞争。\n毫无疑问，汇率大幅度波动独立于不同的经济表现，经济管理因而变得非常复杂，而经济管理又会极大地加剧汇率波动。战后时期的美国经验证明了一个现在看起来被普遍接受的相关观点。在帮助应对以往通货膨胀后果或严重国际失衡方面，尽管货币贬值（或升值）可能是合适甚至是必要的，但它不能代替更基本的政策去恢复竞争力、提高生产率和储蓄以及维持稳定。反复多次的贬值，实际上意味着放弃必要的政策决定，最后只会让维持增长和稳定的工作变得复杂。\n其他参考 # 《时运变迁》\nThe Future of the IMF\u0026rsquo;s Special Drawing Right (SDR)\nWhat is the SDR?\nSDR的诞生与发展 ——人民币加入SDR系列文章之二\n改革开放三十年来人民币汇率体制的演变\n流动性经济学｜人民币汇率70年：汇率并轨的始末与纠结\n","date":"2023-05-31","permalink":"/articels/%E4%BB%8E%E5%9B%BA%E5%AE%9A%E8%B5%B0%E5%90%91%E6%B5%AE%E5%8A%A8%E6%97%B6%E8%BF%90%E5%8F%98%E8%BF%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","section":"文章","summary":"《时运变迁》的读书笔记，介绍从布雷顿森林体系到浮动汇率制的过程","title":"从固定走向浮动 ——《时运变迁》读书笔记"},{"content":"","date":"2023-05-31","permalink":"/tags/%E7%BB%8F%E6%B5%8E/","section":"Tags","summary":"","title":"经济"},{"content":"","date":"2023-05-31","permalink":"/articels/","section":"文章","summary":"个人编辑的一些文章","title":"文章"},{"content":"","date":"2023-05-31","permalink":"/tags/%E9%98%85%E8%AF%BB/","section":"Tags","summary":"","title":"阅读"},{"content":"通过一次内存溢出的事故，看了一下netty相关的源码，分享一下自己的收获。\n排查内存溢出的办法 # 可以使用 jcmd 命令 查看Naive Memory，例如\njcmd {pid} VM.native_memory summary scale=MB Netty 源码分析 # Netty Allocator # Netty的分配器分为两种，pooled和unpooled，可以通过 VM option 中的 io.netty.allocator.type 修改，默认是pooled。不论是pooled还是unpooled都可以选择是走heap和direct，分别指堆内和堆外模式。\nNetty Allocator 中实现pooled和unpooled的具体方法是PooledByteBufAllocator 和 UnpooledByteBufAllocator，具体的实现继承关系如下图： AbstractByteBufAllocator # AbstractByteBufAllocator主要做了2件事：\n判断使用heap还是是用direct，默认是走direct即堆外内存。可以通过VM参数io.netty.noUnsafe和io.netty.noPreferDirect来设置堆内或是堆外。 监控是否发生内存泄露。在每次新建ByteBuf后，都会调用toLeakAwareBuffer()方法，此方法会trace对应的ByteBuf，用来判断有没有内存泄露的风险。 PooledByteBufAllocator # PooledByteBufAllocator是池化模式下的分配器，其中定义了许多相关参数，如池中的chunkSize、pageSize、smallCacheSize、normalCacheSize等等，这里就不展开来细节了。\n池化模式中具体的内存分配使用的是 PoolArena 类，我们首先看一下和它相关类的UML图：\n首先需要注意的点是\n内存的分配是PooledByteBufAllocator通过调用PoolArena的 allocate() 方法完成的，同时返回了netty中定义的PooledByteBuf类。 内存的释放是PooledByteBuf类通过调用PoolArena的 reallocate() 或者 free() 方法实现的。 PoolArena给allocator返回的是PooledByteBuf类，但是在实际的newChunk中操作的是一个泛型。这个泛型对direct堆外模式来说是一个nio中的ByteBuffer，对heap堆内模式来说时一个byte[]数组。 由此我们可知，allocate在分配内存的时候会创建一个PooledByteBuf，并在其中管理nio中的ByteBuffer或者byte[]数组来实现对内存的实际操作。内存的释放则是通过创建的PooledByteBuf对象来控制。下面具体展开说明分配和释放：\ndirect 堆外内存 管理direct堆外内存的PooledByteBuf根据是否safe分为两类：\nsafe情况下，使用PooledDirectByteBuf对象管理 unsafe情况下，使用PooledUnsafeDirectByteBuf对象管理 根据上面我们已经清楚，direct堆外内存的PooledByteBuf中，实际去分配或占用内存的是nio中的ByteBuffer。ByteBuffer的分配和释放，则是根据nocleaner分为两种实现方式：\nnocleaner模式下的内存分配，是通过reflect反射中的Constructor构造器来创建ByteBuffer对象； nocleaner模式下的内存释放，是直接通过UNSAFE中的native方法freeMemory0(long address)释放； cleaner模式下的内存分配，直接使用new DirectByteBuffer的方式创建； cleaner模式下的内存释放，是通过reflect反射调用nio中DirectByteBuffer的cleaner去完成内存释放。 static final class DirectArena extends PoolArena\u0026lt;ByteBuffer\u0026gt; { @Override protected PoolChunk\u0026lt;ByteBuffer\u0026gt; newChunk(int pageSize, int maxPageIdx, int pageShifts, int chunkSize) { if (directMemoryCacheAlignment == 0) { ByteBuffer memory = allocateDirect(chunkSize); return new PoolChunk\u0026lt;ByteBuffer\u0026gt;(this, memory, memory, pageSize, pageShifts, chunkSize, maxPageIdx); } final ByteBuffer base = allocateDirect(chunkSize + directMemoryCacheAlignment); final ByteBuffer memory = PlatformDependent.alignDirectBuffer(base, directMemoryCacheAlignment); return new PoolChunk\u0026lt;ByteBuffer\u0026gt;(this, base, memory, pageSize, pageShifts, chunkSize, maxPageIdx); } private static ByteBuffer allocateDirect(int capacity) { return PlatformDependent.useDirectBufferNoCleaner() ? PlatformDependent.allocateDirectNoCleaner(capacity) : ByteBuffer.allocateDirect(capacity); } @Override protected void destroyChunk(PoolChunk\u0026lt;ByteBuffer\u0026gt; chunk) { if (PlatformDependent.useDirectBufferNoCleaner()) { PlatformDependent.freeDirectNoCleaner((ByteBuffer) chunk.base); } else { PlatformDependent.freeDirectBuffer((ByteBuffer) chunk.base); } } @Override protected PooledByteBuf\u0026lt;ByteBuffer\u0026gt; newByteBuf(int maxCapacity) { if (HAS_UNSAFE) { return PooledUnsafeDirectByteBuf.newInstance(maxCapacity); } else { return PooledDirectByteBuf.newInstance(maxCapacity); } } } heap 堆内内存\n管理heap堆内内存的PooledByteBuf也根据是否safe分为两类：\nsafe情况下，使用PooledHeapByteBuf对象管理 unsafe情况下，使用PooledUnsafeHeapByteBuf对象管理 同样根据上面得知，heap堆内内存是通过维护一个byte[]数组去实现的。这其中比较重要的一个参数是 io.netty.uninitializedArrayAllocationThreshold ，用来设置未初始化的byte数组的阈值，默认是1024。\n具体的分配与释放如下：\n内存的分配方面，如果需要分配的byte数组大小不超过阈值，则直接使用new byte[]创建；如果超过了阈值，则使用reflect反射创建byte数组 内存的释放方面，直接依赖GC static final class HeapArena extends PoolArena\u0026lt;byte[]\u0026gt; { private static byte[] newByteArray(int size) { return PlatformDependent.allocateUninitializedArray(size); } @Override protected PoolChunk\u0026lt;byte[]\u0026gt; newChunk(int pageSize, int maxPageIdx, int pageShifts, int chunkSize) { return new PoolChunk\u0026lt;byte[]\u0026gt;( this, null, newByteArray(chunkSize), pageSize, pageShifts, chunkSize, maxPageIdx); } @Override protected void destroyChunk(PoolChunk\u0026lt;byte[]\u0026gt; chunk) { // Rely on GC. } @Override protected PooledByteBuf\u0026lt;byte[]\u0026gt; newByteBuf(int maxCapacity) { return HAS_UNSAFE ? PooledUnsafeHeapByteBuf.newUnsafeInstance(maxCapacity) : PooledHeapByteBuf.newInstance(maxCapacity); } } UnpooledByteBufAllocator # UnpooledByteBufAllocator是非池化模式下的分配器。其中定义了好几个内部类如下：\nInstrumentedUnpooledUnsafeHeapByteBuf InstrumentedUnpooledHeapByteBuf InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf InstrumentedUnpooledUnsafeDirectByteBuf InstrumentedUnpooledDirectByteBuf direct 堆外内存 driect堆外内存需要关注的是InstrumentedUnpooledDirectByteBuf、InstrumentedUnpooledUnsafeDirectByteBuf和InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf，下面对这三种做一下区分：\n如果是safe的情况下，则使用InstrumentedUnpooledDirectByteBuf 如果是unsafe的情况 + cleaner模式，则使用InstrumentedUnpooledUnsafeDirectByteBuf 如果是unsafe的情况 + nocleaner模式，则使用InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf 这三类实际上也是通过nio中的ByteBuffer去实现内存的分配和释放的，具体实现方式如下：\nInstrumentedUnpooledDirectByteBuf：内存分配通过 new DirectByteBuffer 的方式实现的；内存的释放通过reflect反射调用nio中DirectByteBuffer的cleaner实现。 InstrumentedUnpooledUnsafeDirectByteBuf：内存分配通过 new DirectByteBuffer 的方式实现的；内存的释放通过reflect反射调用nio中DirectByteBuffer的cleaner实现。 InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf：内存的分配通过reflect反射中的Constructor构造器创建ByteBuffer对象实现；内存的释放直接通过UNSAFE中的native方法freeMemory0(long address)实现。 public class UnpooledUnsafeDirectByteBuf extends UnpooledDirectByteBuf { protected ByteBuffer allocateDirect(int initialCapacity) { return ByteBuffer.allocateDirect(initialCapacity); } protected void freeDirect(ByteBuffer buffer) { PlatformDependent.freeDirectBuffer(buffer); } } class UnpooledUnsafeNoCleanerDirectByteBuf extends UnpooledUnsafeDirectByteBuf { UnpooledUnsafeNoCleanerDirectByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) { super(alloc, initialCapacity, maxCapacity); } @Override protected ByteBuffer allocateDirect(int initialCapacity) { return PlatformDependent.allocateDirectNoCleaner(initialCapacity); } @Override protected void freeDirect(ByteBuffer buffer) { PlatformDependent.freeDirectNoCleaner(buffer); } } heap 堆内内存 heap堆内内存需要关注的是InstrumentedUnpooledHeapByteBuf和InstrumentedUnpooledUnsafeHeapByteBuf\n这两个类内存使用的也是byte[]数组实现，具体的分配和释放内存方式如下：\nInstrumentedUnpooledHeapByteBuf：内存的分配直接通过 new byte[] 实现。 InstrumentedUnpooledUnsafeHeapByteBuf：内存的分配使用reflect反射创建byte数组。 两者的内存释放都依赖于GC public class UnpooledUnsafeHeapByteBuf extends UnpooledHeapByteBuf { @Override protected byte[] allocateArray(int initialCapacity) { return PlatformDependent.allocateUninitializedArray(initialCapacity); } } public class UnpooledHeapByteBuf extends AbstractReferenceCountedByteBuf { @Override protected byte[] allocateArray(int initialCapacity) { return new byte[initialCapacity]; } protected void freeArray(byte[] array) { // NOOP } } Netty ByteBuf # 这部分主要了解一下ByteBuf的之间的实现和集成关系，通过这部分对ByteBuf和其中的ByteBuffer或者byte数组有更深的了解。具体的UML图如下，下面会对其中关键点做描述。\nAbstractReferenceCountedByteBuf ：\n内部定义了一个ReferenceCountUpdater，用来做引用计数 实现了release方法，显式释放了updater引用技术的数量，然后调用子类 deallocate() 方法进行内存的释放 PooledByteBuf ：\n定义了泛型T memory，用于存储byte[]或ByteBuffer 记录了分配器allocator 定义了池化的recyclerHandle回收处理器，其4个子类分别定义了四个RECYCLER回收器，由父类中的handle统一处理。这里的回收器回收的是ByteBuf对象。 实现了deallocate方法，通过RECYCLER回收器释放内存 UnpooledDirectByteBuf：\n定义了direct堆外内存的中所使用的ByteBuffer 记录分配器allocator 实现了safe + cleaner模式下的内存分配和释放；其他情况由子类UnpooledUnsafeDirectByteBuf和UnpooledUnsafeNoCleanerDirectByteBuf复写实现。 UnpooledHeapByteBuf：\n定义了heap堆内内存中所使用的byte[]数组 记录分配器allocator 实现了safe模式下的内存分配；unsafe模式由子类UnpooledUnsafeHeapByteBuf实现。 Java NIO ByteBuffer # 经过上面的介绍，我们得知netty ByteBuf在direct模式下，实际上操作的是Java nio中的ByteBuffer。下面对其关键点做一下说明。\nMappedByteBuffer：\n定义了文件描述符fd，用于对堆外内存的io操作 DiractByteBuffer：\n定义了cleaner用于内存释放的实现 注意：netty heap并不会直接使用ByteBuffer，只有在需要时会将byte[]数组转成ByteBuffer\nSpring DataBuffer # 在实际reactor netty的使用中，我们很少能接触到nio的ByteBuffer或者netty中的ByteBuf，但是会用到spring-core包中定义的DataBuffer。\n下面我们看下DataBuffer相关的UML图\n内存泄露风险：在直接对DataBuffer使用时，如果实现是NettyDataBuffer，则需要注意databuffer的释放问题，使用不当有可能会造成内存泄露的风险。\nByteBuffer/ByteBuf/DataBuffer之间的关系 # 最后用一张图说明ByteBuffer/ByteBuf/DataBuffer这三者之间的关系。\n可以从下面这张图看出，DataBuffer主要有两种实现：\nDefaultDataBuffer 中定义了成员变量BtyeBuffer，通过nio对象来实现 NettyDataBuffer中定义了成员变量 ByteBuf，通过netty对象来实现 其次，对于ByteBuf来说，底层也是通过nio的DyteBuffer去实现的。\n参考链接 # https://juejin.cn/post/6844904037146443784\nhttps://projectreactor.io/docs/netty/release/reference/index.html#faq.memory-leaks\nhttps://netty.io/wiki/reference-counted-objects.html\nhttps://tech.meituan.com/2018/10/18/netty-direct-memory-screening.html\n","date":"2023-02-06","permalink":"/articels/netty-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%8F%8A%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E6%80%9D%E8%B7%AF/","section":"文章","summary":"主要介绍了Java NIO、Netty和Spring Reactor中Buffer的使用和继承关系。","title":"Netty 源码分析及内存溢出思路"},{"content":"","date":"2023-02-06","permalink":"/tags/%E6%8A%80%E6%9C%AF/","section":"Tags","summary":"","title":"技术"},{"content":" hugo搭建 # 具体文件详见 HUGO安装文档，下面主要解释一下docker部署的方式。 docker镜像地址：https://hub.docker.com/r/klakegg/hugo github地址：https://github.com/klakegg/docker-hugo lakegg/hugo镜像有基于 Busybox、 Alpine、 Debian 和 Ubuntu4个系统.其中每个系统又分为normal、ext、onbuild、ci、ext-ci、ext-onbuild 6种，Busybox没有ext相关，下面简要介绍一下几种的区别\nnormal：只有基础的hugo命令。默认Entrypoint是hugo，所以common只需要写server，即可执行hogu server ext：拓展版，在normal基础上添加了go、git、nodejs等拓展工具 (推荐) ci: 主要用于持续集成/部署。在normal基础上，新增了环境变量HUGO_ENV，去掉了默认Entrypoint，需要自行添加容器运行命令 onbuild: 此版本主要用于编译构建并可以分开源码和产出。默认源码文件夹是/src，产出文件夹是.target，可以通过HUGO_DIR和HUGO_DESTINATION_ARG进行自定义设置。 docker镜像版本如下：\nbusybox Alpine Alpine with Asciidoctor Alpine with Pandoc Debian Ubuntu normal latestbusybox alpine asciidoctor pandoc debian ubuntu ext - ext-alpine ext-asciidoctor ext-pandoc ext-debian ext-ubuntu ci cibusybox-ci alpine-ci asciidoctor-ci pandoc-ci debian-ci ubuntu-ci onbuild onbuildbusybox-onbuild alpine-onbuild asciidoctor-onbuild ext-pandoc-onbuild debian-onbuild ubuntu-onbuild ext-ci - ext-alpine-ci ext-asciidoctor-ci ext-pandoc-ci ext-debian-ci ext-ubuntu-ci ext-onbuild - ext-alpine-onbuild ext-asciidoctor-onbuild ext-pandoc-onbuild ext-debian-onbuild ext-ubuntu-onbuild hugo模板可以参考 https://themes.gohugo.io/\nBlowfish模板使用 # Hugo的主题主要是用了blowfish，下面主要对blowfish的使用展开简要说明 Hugo theme - blowfish blowfish github地址 blowfish的github主要介绍了使用git submodules和Hugo的部署方式，这里主要介绍一下如何使用上面介绍的hugo docker镜像进行部署\ngo.mod中添加blowfish require github.com/nunocoracao/blowfish/v2 version // indirect config/_default/module.toml文件添加： [[imports]] path = \u0026#34;github.com/nunocoracao/blowfish/v2\u0026#34; 将根目录引用到镜像内的/src目录下，启动docker即可 自定义浏览器角标 # 在 favicon.io讲自己的图片生成为各种尺寸的icon，直接解压在favicon.io下载好的icon压缩包，并放在/static目录下即可\n自定义ICON # 将自定义的svg文件放在/asserts/icons目录下，为了使ICON和主题自适应，需要在svg文件中添加属性 fill=\u0026ldquo;currentColor\u0026rdquo; 如下：\n\u0026lt;svg\u0026gt; \u0026lt;\u0026lt;path fill=\u0026#34;currentColor\u0026#34; d=\u0026#34;xxx\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; blowfish文档 # 使用blowfish搭建博客，具体参考 文档\n","date":"2022-12-09","permalink":"/articels/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","section":"文章","summary":"简述一下博客搭建过程。\u003cbr/\u003e框架使用的是用GO语言编写的Hugo，Hugo模板用的是blowfish。","title":"博客搭建简述"},{"content":" 宏观之锚——中国利率及作用 ","date":"2022-11-10","permalink":"/articels/%E5%AE%8F%E8%A7%82%E4%B9%8B%E9%94%9A%E4%B8%AD%E5%9B%BD%E5%88%A9%E7%8E%87%E5%8F%8A%E4%BD%9C%E7%94%A8/","section":"文章","summary":"中国利率调控工具简述","title":"宏观之锚——中国利率及作用"},{"content":" 关于脸肿 但不仅限于脸肿 ","date":"2022-07-08","permalink":"/articels/%E5%85%B3%E4%BA%8E%E8%84%B8%E8%82%BF-%E4%BD%86%E4%B8%8D%E4%BB%85%E9%99%90%E4%BA%8E%E8%84%B8%E8%82%BF/","section":"文章","summary":"回顾关于字幕组的事情","title":"关于脸肿 但不仅限于脸肿"},{"content":"","date":"2022-07-08","permalink":"/tags/%E9%9A%8F%E7%AC%94/","section":"Tags","summary":"","title":"随笔"},{"content":"留存谷声熊读书会的笔记\n2023-3上 《自控力》 2023-2上《蛤蟆医生去看心理医生》 2023-1下 《非暴力沟通》 ","date":"2022-06-13","permalink":"/notes/","section":"","summary":"留存谷声熊读书会的笔记 2023-3上 《自控力》 2023-2上","title":"笔记"},{"content":" 经济金融 图片 名称 作者 链接 其他 Economics of Money and Banking 货币银行学 Perry G Mehrling coursera 智堡 2022 - Present The New Lombard Street 新伦巴第街 Perry G Mehrling 书籍链接 2022 - Present Money and Empire Perry G Mehrling 书籍链接 2022 - Present 聪明投资者的成功之道——好生意、好公司、好价格 Value_at_Rist 陈晓虎 书籍链接 2022 - Present 政治 名称 作者 链接 其他 如何学习重要政党会议 东吴证券 书籍链接 2022 - Present ","date":"2022-06-13","permalink":"/recommend/","section":"推荐","summary":"经济金融 图片 名称 作者 链接 其他 Economics of Money and Banking 货币银行学 Perry G Mehrling coursera 智堡","title":"推荐"},{"content":" 主要是对最近看的《置身事内——中国政府与经济发展》微观篇做下梳理，把自己比较感兴趣的点稍微记录一下。当然书中说的会更加细节和全面，且用了大量的事例方便理解，所以最好还是建议直接看书。本来想全看完写的，目前就看了一半，后一半是宏观篇\u0026hellip;图的话是照着书中的原图自己画的，基本没有改动。\n1. 央地关系 # 本书中第一章主要介绍了地方政府的权利与事务，但在这里我主要想总结为央地关系，主要分行政管理层面、信息不对等和激励相容。附上书中的行政规划图： 1.1 行政管理 # 行政管理层面主要分为两点：\n条块分割，多重领导 “条条”指从上到下的部门垂直关系；“块块”指横向的以行政区划为界的政府。\n大多数地方部门需要同时接受“条条”和“块块”的双重领导。通常“条条”关系是业务关系，“块块”关系是领导关系。\n上级领导与协调 若是部门事务，本部门领导就可以决定；\n若是经常性的跨部门事务，则设置上级“分管领导”甚至“领导小组”来推进。\n以上只是总结在行政管理层面之间的关系，但是对于具体的复杂事务，需要灵活处理。\n1.2 信息不对等 # 信息不对等主要有上下级信息不对等和内部领导与专职人员的信息不对等，例如古代的官和吏，英国的内阁部门长官和常务次官。因为下级可能扭曲或者隐瞒信息，所以上级的监督和审计就很有必要，但监督机制本身也会受信息制约。\n对于规章制度清晰、有客观评价标准的事务，可以各方立约，权责利协商清楚即可。但对于大多数时候，模糊不清的地方很多，也没有明确的规章制度，实际的权利和责任就会高度个人化，导致体制内的规章制度无法完全取代个人信任。\n1.3 激励相容 # 最后是激励相容，即上下级和工作目标与官员自身利益之间的激励相容。\n对于一类比较具体的，规划流程明确，成果容易衡量和评价的，更倾向于垂直化管理和领导，例如海关。\n对于另一类比较抽象和宽泛的，需要给地方放权即属地管理。明确地方的权利和责任，同时与地方分享发展成果，如发展经济方面。\n2. 财政与税务 # 第二章介绍了分税制改革，之后兴起的土地财政，以及后续针对一系列不平衡等问题的继续改革，总结如下图所示：\n2.1 分税制改革 # 财政包干期间，需要根据地方实际来确定承包形式和分账比例，各个地方向中央缴纳的比例各不相同，导致中央收入占比不断下降，于是出现了94年的分税制改革。\n94年实行的分税制改革把税收分为3类：中央税（如关税），地方税（如营业税）和共享税（如增值税）。改革中最重要的税种是增值税（占全国税收收入1/4），由地方税改为共享税，从93年税收为基数，新增的部分中央拿75%地方25%。分税制改革后，中央占全国预算收入的比重从改革前的22%增加到55%。增加了中央政府的宏观调控，但是改变地方政府发展经济的模式。改革中涉及到央地博弈的部分，书中朱总理和广东省协商博弈的部分比较有意思。\n2.2 分税制后的改革 # 分税制改革后，地方政府手中的资源受到了挤压。98年实行住房分配货币化，并明确政府对土地建设的垄断权力后，地方政府开始通过土地和税收进行招商引资竞争，由此引发了地区间的不平衡，市区相比县乡、珠三角长三角相比中西部更容易通过土地的资本运作转换成有价值的资产。于是出现了以下改革：\n将农村基本公共服务开支纳入国家公共财政保障范围，中央和地方共同负担\n税收返还、中央转移支付和激励机制\n基层财政资源向上统筹，如乡财县管，省直管县\n3. 投融资与债务 # 这一章主要讲的是地方政府依托于土地金融进行的投融资和债务问题。 由于分税制改革导致地方财政吃紧，城市化进程又需要大量城建经费，需要在城市建设开发中引入银行资金，此时便需要城投公司，即政府融资平台，国内最大的城投公司是国家开发银行。\n简单描述下面的图就是，通过土地为主的融资，用于基础设施建设（工业园区、文旅等等），获得经济收益，从而还清负债的同时，带动经济增长和城市生活质量。\n3.1 投融资 # 这部分主要介绍政府如何进行城市建设，分为3种模式如下：\n政府融资平台负责土地的整理和基础设施建设（土地一级开发），企业负责建设、招商、运营（土地二级开发），可以是房地产企业或是央企国企等，如万达广场、新天地、苏州工业园区等等\n政府融资平台进行土地一级和二级开发，主要是由于周期长、盈利前景不明确，且问题复杂涉及历史文化保护等，民营企业难以处理，比较特例，如成都宽窄巷子，由成都文旅集团全权开发和运营\n土地一级和二级开发完全依托于民营企业。此类情况主要针对中西部市县，招商引资困难的地区。这类民企如华夏幸福\n3.2 债务问题 # 城投公司最主要的融资方式是银行贷款和发行债券，即城投债。但日后能否负担起这些债务，取决于跟土地有关的收益，否则只能靠借新还旧来滚动和延续债务。于是针对地方债进行了如下改革和治理：\n债务置换 用地方政府发行的公债，替换一部分融资平台公司的银行贷款和城投债。因为政府公债利率低、期限长且信用更高\n推动融资平台转型，厘清与政府的关系，剥离为政府融资的功能，破除政府对其的“隐性”担保\n约束银行和金融机构，避免大量资金流入融资平台\n问责官员，对过度负债终身追责\n4. 工业化中的政府角色 # 这章主要通过事例（京东方和光伏）来介绍的，下面主要对给出的事例做一个时间线的总结。光伏的懒得写了。\n4.1 京东方与政府投资 # 京东方前身是国企北京电子管厂。\n2005年在北京市政府与国开行协调下，9家银行组成银团，由建设银行北京分行牵头，给京东方贷款收购韩国企业的生产线，并在北京亦庄建设5代线。具备生产小型液晶显示面板的能力。\n2008年，京东方在成都建设4.5代线，成都2家城投公司（成都工业投资集团和成都高新投资集团）定向政府股票18亿，剩余16亿采用银团贷款，由国开行牵头。\n2009年，合肥政府承诺出资60亿帮助京东方建立6代线，同时两家城投公司（合肥建投和合肥新城）带动社会资本又融资120亿，其中两家城投公司30亿社会投资机构出资90亿。此外京东方还利用国开行牵头银团贷款75亿。解决了大屏幕被卡脖子的问题。\n京东方的基本融资模式是扩充资本金+银行贷款。地方政府投资平台既可以参与京东方股票定向增发来扩充资本金，也可以用土地使用权收益入股。同时地方城投公司可以委托当地银行向京东方提供低息甚至免息委托贷款。\n4.2 政府产业引导基金 # 首先我们先了解一下私募的概念，简单讲就是一群人把钱交给另一群人去管理和投资，分享投资收益。私募分为LP（有限合伙人，即出钱方），GP（普通合伙人，即管钱和投资人）。LP把钱交给GP投资和运作，同时付给GP两种费用（基本管理费和绩效提成）。GP的投资对象可以是上市公司公开交易股票（二级市场），也可以是未上市公司的股权（一级市场），还可以是上市公司的定向增发（一级半市场）。其中政府引导基金就是属于LP。\n政府引导基金和政府投资企业相比有以下三个特点：\n不直接参与投资，把钱交给市场化的私募基金GP\n把引导基金交给市场化基金管理人运作，是借用市场力量去使用财政资金\n大多数引导基金投向战略新兴产业，不允许投向基础设施和房地产\n看得见的手——《置身事内》笔记（微观） ","date":"2022-02-06","permalink":"/articels/%E7%9C%8B%E5%BE%97%E8%A7%81%E7%9A%84%E6%89%8B-%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%E7%AC%94%E8%AE%B0%E5%BE%AE%E8%A7%82/","section":"文章","summary":"主要介绍一下上半部分微观篇的内容","title":"看得见的手——《置身事内》读书笔记"},{"content":" 盘点一下近一两年看过的仍然记忆犹新的书吧。不会写太多，只是简单记录一下最直观的感受吧，仅为个人感受。那就直接开始啦，排名不分先后\n##《渺小一生》\n这本书是maya推荐的，偶尔有次刷ins发现啪姐，没错是Dua Lipa在看这本书还有点意外。\n这本书其实不是很建议特别有共情力的人去阅读。感觉自己不算特别有共情力，但每次裘德割自己时候自己也像感受到疼痛似的，甚至裘德的一些想法有时候自己极端的时候也会这么想。我在惊讶于童年的黑暗过往会对一个人产生如此重大影响的同时，也会羡慕威廉和裘德的友情，准确的讲并不单单是友情，而是凌驾于友谊和爱情之上一种互相理解、容忍、宽容的一种情感。虽说仅会在小说中出现，但却不曾让人停止向往。\n##《房思琪的初恋乐园》\n这本书的主题大概可以是——假以爱之名的诱骗，假以爱之名的宽慰；爱在其中既充当了引诱、欺骗的借口，又充当了消解自己无限痛苦和自我安慰的支柱。读这本书是因为书名和内容的强烈反差让我产生了兴趣，之所以放在第二个，是因为同第一本一样描述了童年对人的深刻印象。关于儿童自我状态可以出门左转看心理学入门《蛤蟆先生去看心理医生》。\n在这本书之外，我也去了解了作者林奕含的一生，看了她在婚礼上的演讲。她讲出了自己作为一个精神病人的青春直至成年，讲到了爱情中的平等，讲到了自己的理想和与文学的结缘。但即便她看起来如此的正常，甚至高于常人的坦诚和勇敢，依然还是选择了离开。以至于她认定的男生在得知这件事情后的痛苦我至今无法想象，或者说不敢想象。\n##《书店日记》《书店四季》\n这本书看起来真的很轻松，肖恩的英式毒舌读起来很有意思。当然这本书也不单单是毒舌，还讲到各式各样的人或事，像是什么为了躲避亲戚去书店过圣诞，为了去书店实习从意大利远赴英国的奶奶，肖恩的开卷随缘俱乐部，还有肖恩和安娜介于友情和亲情之间的关系等等。更不可思议的是，这些确实都是大洋彼岸的国家发生过的事情。\n顺便在看《书店四季》的时候，肖恩提到《大师与玛格丽特》写道：“奶奶说我会喜欢这本书，如果最初一百页足以作为判断依据，她是过于保守了。我读得完全放不下来。”\u0026hellip;然后我看了看我已经吃灰的这本书，下决心把它读完了。谢谢你，肖恩.jpg\n###《传家之物》\n其实我看的第一本艾丽丝·门罗的书并不是这本而是《逃离》，然后发现理想国的这本更全，嘛反正都是收录短篇小说。\n门罗和阿特伍德算是加拿大的两位文学女王了，都是以女性主义著称。门罗都是短片小说，然后阿特伍德的话主要是诗和长篇了，长篇中都会有很多诗的影子，以至于我这种文学素养不足的就\u0026hellip;.看了她的《盲刺客》、《证言》和一个短篇集（更像诗），如果美剧《使女的故事》也算的话，这些也挺推荐的，好了打住。\n至于门罗的作品，短篇都是女性的视角去描写的，相比阿特伍德的作品也通俗很多。因为短篇小说嘛，我就睡前看，然后看前半部分好容易打瞌睡，看到一半就不困了，看完直接整精神了。感觉大部分短篇前面都是在情感铺垫，然后逐渐爆发这样。描写女性的心理极为细腻，算是第一次如此细致的了解女性的视角吧。个人比较喜欢她的《法力》《荨麻》《孩子们留下》《幸福过了头》这些吧。哦对还有一点就是她的短篇标题都\u0026hellip;还挺普通的。\n###《走出唯一真理观》\n这本书的作者陈嘉映教授还挺有意思的。第一次知道他是一席在北京的一场演讲，下午五个人讲他排在中间，那个点简直困麻了，所以现场印象不深，但感觉确实是一席里面唯几个拿得出的演讲了，之后看了录播。然后通过他了解了海格德尔、维特根斯坦，突然对哲学有了兴趣，当时刚好也看了《哲学的慰藉》，但之后买的《维特根斯坦读本》之后连封皮都没拆。\n好了扯远了，说回这本书，这本书其实算是陈嘉映先生之前文章和访谈的合集。其实我也只是挑着看的，看了学术自述、关于爱情和死亡的采访、教育与洗脑的演讲等。他在讲述过程中会不断引用事例来方便大家理解这点确实很好，其次就是总在隐约地强调主旨——放弃唯一性，坚持真理性。\n###OTHER\n主要就这几本吧，剩下的主要随便提两笔，不过看的也确实有限\u0026hellip;\n《不似骄阳》是以小说形式讲的莎士比亚的情史还挺有意思的算是。\n科幻作品的话，除了《三体》其他看的都是短篇了，像阿西莫夫和冯内古特的短篇，然后感觉《变化的位面》脑洞也挺大的，这个是听核市奇谭的电台知道的。\n为了避免一直沉浸在翻译腔中，还去看了看王小波的杂文和贾平凹的《废都》。王小波的观点真的很有趣只可惜英年早逝…\n然后就是村上和毛姆之前看的多一些，其他作家大都是看一两本这样。之后为了看一些近现代的，去看了《正常人》《聊天记录》这些。再然后就不太想看小说了，转而看《西方政治传统》《工作、消费与新穷人》《崩盘》这种偏向社政或者商科经济的书。\n最近的话准备看《置身事内》，一本讲中国中央与地方，政策与经济关系的书，前两天微博也看到有金融方面的博主推荐说不错。希望不鸽好吗。\n综上，我不是很喜欢一直沉浸在一种模式下，也比较想尝试更多新的东西以追求新鲜感，所以可能会尝试穿插着去阅读各种不同类型的自己感兴趣的这样。\n###最后\n总的来说，一开始确实想从书中获得什么道理、灵感或者说答案，但是吧，这种影响还是潜移默化的，大多数看完之后也只是消遣或是会觉得很爽这样。然后就想更深层次理解某些东西，去选择心理或者哲学的书，或者想去更好地了解现实而去看一些社科、经济方面的书大概。\n不过说到底还是消遣啦。顺便还好之前加的读书群，发现越来越怠惰之后，只有为了不被读书群踢掉才每月尽力读的一本书。买书的话也是尽量去万圣书园买，这个在北大附近的书店，每月书的热销榜也挺有意思。\n希望书店和群一直在ww这就是你不去抽空学习技术的原因吗？我错了我错了.jpg\n读书 读书 ","date":"2022-01-11","permalink":"/articels/2022%E5%B9%B4%E5%88%9D%E8%AF%BB%E4%B9%A6%E5%9B%9E%E9%A1%BE/","section":"文章","summary":"2022年以前两三年的读书笔记","title":"2022年初读书回顾"},{"content":" 本书是首都师范大学哲学系教授 陈嘉映先生的著作。主要收录了一些陈嘉映老师的学术自述、采访、对话、演讲等等。通过以自己哲学家的视角，对历史、艺术、政治、科技、死亡与爱情、教育与洗脑、读书，甚至是人工智能等等，表达自己的观点和看法。不过我以为，不论观点和看法的结果如果，陈老师对这些问题思考的过程和深度，是值得我们细细去品味的。\n既然书名是《走出唯一真理观》，我也想以这个标题展开讲讲。以下内容主要源自于本书开头的哲学自述和个人的一些思考和理解 (同时声明一点，我个人由于不喜欢对话类型，所以也都是跳着看的，暂时还没看完\u0026hellip;) 。\n本书开篇想讲了陈嘉映老师的个人的经历，个人学习和思考的过程变化，以及发生过的种种事情，比如文革、恢复高考、出国，改革开放等等，逐渐阐述了自己思想上的改变——走出普遍主义(即认为存在对所有人普遍适用的普遍伦理的一元论)。下面请允许我引用一段书中的原文：\n\u0026emsp;\u0026emsp;要说转变，思想的总体倾向倒是有转变。是什么呢？简单说，是走出普遍主义。我一开始读哲学，是读黑格尔，后来一直读到柏拉图，不管读得深浅，但是大致是在这样一个思想框架和精神框架下思考的。简单说，有一套终极的真理或者唯一的理念，其他都是这样的一个一的分殊。可以说是普遍主义的或绝对主义的。后来我渐渐离开了这种普遍主义。我不知道这个转变是啥时候发生的，也说不上是在哪一位的影响下发生了这种转变。1975年之后，我读杜威、威廉·詹姆士，读罗素，后来读海德格尔，读维特根斯坦，渐渐地，离开了唯一真理的想法。有不同的道，从前有不同的道，现在有不同的道，将来还有不同的道。重要的问题不是要找唯一的道，而是这些不同的道之间怎么呼应，怎么交流，怎么斗争。你要是坚持说，哲学要的就是唯一的真理体系，那我不得不说，哲学已经死了。不是我说的，二十世纪好多哲学家这么说，比如海德格尔，他晚年有篇文章就叫做《哲学的终结与思的任务》。 总得来说这里所说的思想上的转变多少还有些抽象，所以陈嘉映老师还列举了大量的事例，让它变得更加通俗。例如他用政治思想举例。年轻时他对专制政体深恶痛绝，对民主宪政有着无限的憧憬，认为民主宪政是人类的目标——人类社会最后要归于民主宪政。但逐渐地，他不再认为无论哪个国家，处境如何，都该采纳这种制度。紧接着，便开始怀疑民主宪政是不是人类制度的最后归宿，也许会有另外的制度更适合新的社会状况，成为政治思想上的主流，甚至于说就没有主流。当然这里的论述并非是想尝试探索政治思想的根源，或者争论什么政治上的学术问题，而只是为了展示走出普遍主义的思想在政治层面上的一种体现。\n同时，书中并非是那种难以理解，让人捉摸不透的语言，反而十分通俗，甚至会有些哲学家的幽默感，或是饱含情感，例如他在讲到政治思想时对福山的批评：\n\u0026emsp;\u0026emsp;苏联解体的时候，自由主义似乎完胜，福山甚至认为历史已经终结。这简直成了笑话，看看这二三十年以来世界的政治经济变化吧，民主宪政制度还说不上在衰败，但它的生命力远不像从前那么强大了。 当我们理解了走出唯一真理观，或者说是走出普遍主义的思想后，以政治思想为例，我们也许会发现：既然没有政体会是主流，我们研究当今世界的政体兴许还有用，但是研究落后的雅典政治，研究古代中国的政治真的还能起到什么用处吗？\n对于这个疑问，陈嘉映老师转向了历史的角度为我们做出了解释 (原文并不是这种跳跃式的讲法，而是一种循序渐进的，但我在此处只是做了简单的摘抄和连接)：\n\u0026emsp;\u0026emsp;我们读历史，因为历史拓宽了我们看待现实的视野。我们读千年的历史，并不是为了看清历史的总体走向。在人类的整体发展中给自己找个位置，这只能是幻觉。历史教给我们更具体而微的东西，让我们更真切地了解我们自己的处境。 当这句话说出来时，看似是单单在说历史，其实可以套在很多层面。比如说爱情，正如人们喜欢听爱情相关的歌曲、看相关的小说，多多少少会认为某个桥段某个人和自己或身边人的情况很相似。更甚者甚至想借机仿照，但往往情况会有不同，我们的经历也不会完全合适地套入到某个故事中。那我们为什么还会去看还会去听还会去了解？因为这些会潜移默化地教给我们更具体而微的东西，让我们更真切地了解自己的处境。\n同样，其他的也可以用类似的方法去解释。但是问题来了，当我们妄图用走出普遍主义后所产生的对待事物的这种方法，去套用所有东西的时候，这是否又走进了普遍主义的陷阱？\n以上内容大多为个人观点，以上摘抄和阐述的内容也仅仅为书的第一小节的一小部分，这本书中还存留着更多有趣的观点及思考。当然这本书也并非直接来告诉我们任何普世的价值或者结论，我所钦佩的也仅是陈嘉映老师由浅及深，逐步分析的思考过程。这种思考的行为本身就对我产生了不少的吸引力。\n最后请允许我用同样是第一小节的一段话来作为本次推荐的结束：\n\u0026emsp;\u0026emsp;哲学死了也没有什么关系，思想还远远不会死。愿意思考的年轻人，一代一代都会涌现。 好书推荐｜《走出唯一真理观》 ","date":"2020-10-15","permalink":"/articels/%E8%8D%90%E4%B9%A6%E8%B5%B0%E5%87%BA%E5%94%AF%E4%B8%80%E7%9C%9F%E7%90%86%E8%A7%82/","section":"文章","summary":"陈嘉映《走出唯一真理观》笔记","title":"荐书：《走出唯一真理观》"},{"content":"","date":"2020-10-15","permalink":"/tags/%E5%93%B2%E5%AD%A6/","section":"Tags","summary":"","title":"哲学"},{"content":"","date":"0001-01-01","permalink":"/about/","section":"","summary":"","title":""},{"content":"","date":"0001-01-01","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"0001-01-01","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"0001-01-01","permalink":"/links/","section":"Links","summary":"","title":"Links"},{"content":" SW-4890-9270-8324\n","date":"0001-01-01","permalink":"/links/nintendo-switch/","section":"Links","summary":"SW-4890-9270-8324","title":"nintendo switch"},{"content":"","date":"0001-01-01","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"QQ Email: 459312872@qq.com\nGmail: weaxsDou@gmail.com\n","date":"0001-01-01","permalink":"/links/email/","section":"Links","summary":"QQ Email: 459312872@qq.com Gmail: weaxsDou@gmail.com","title":"邮箱"}]